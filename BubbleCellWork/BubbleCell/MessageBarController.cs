// The code to automatically grow the text that is being entered// comes from AcaniChat, licensed under the MIT X11 license// from https://github.com/acani/AcaniChatusing MonoTouch.UIKit;using System;using System.Collections.Generic;using System.Drawing;using System.Linq;using System.Text;namespace BubbleCell{	internal class MessageBarController	{		MessageBarView messageBarView;		UITableView tableView;		UIView rootView;		float previousContentHeight;		public event EventHandler<EventArgs> OnSendMessage;		public MessageBarController ( MessageBarView messageBarView, UITableView tableView, UIView rootView )		{			this.messageBarView = messageBarView;			this.tableView = tableView;			this.rootView = rootView;			// Fix a scrolling glitch			this.messageBarView.TextEntry.ShouldChangeText = ( textView, range, text ) =>			{				this.messageBarView.TextEntry.ContentInset = new UIEdgeInsets ( 0, 0, 3, 0 );				return true;			};			previousContentHeight = this.messageBarView.TextEntry.ContentSize.Height;			this.messageBarView.TextEntry.Changed += ( s, e ) => ResizeEntry ( );			this.messageBarView.SendButton.TouchUpInside += ( sender, e ) =>			{				if (OnSendMessage != null) 					OnSendMessage (this, EventArgs.Empty);			};		}		void ResizeEntry ( )		{			var contentHeight = messageBarView.TextEntry.ContentSize.Height - MessageBarView.MessageFontSize + 2;			if ( messageBarView.TextEntry.HasText )			{				if ( contentHeight != previousContentHeight )				{					if ( contentHeight <= MessageBarView.MaxContentHeight )					{						SetChatBarHeight ( contentHeight + 18 );						if ( previousContentHeight > MessageBarView.MaxContentHeight )							messageBarView.TextEntry.ScrollEnabled = false;						messageBarView.TextEntry.ContentOffset = new PointF ( 0, 6 );					}					else if ( previousContentHeight <= MessageBarView.MaxContentHeight )					{						messageBarView.TextEntry.ScrollEnabled = true;						messageBarView.TextEntry.ContentOffset = new PointF ( 0, contentHeight - 68 );						if ( previousContentHeight < MessageBarView.MaxContentHeight )						{							ExpandChatBarHeight ( );						}					}				}			}			else			{				if ( previousContentHeight > 22 )				{					ResetChatBarHeight ( );					if ( previousContentHeight > MessageBarView.MaxContentHeight )						messageBarView.TextEntry.ScrollEnabled = false;				}				AdjustEntry ( );			}			if ( messageBarView.TextEntry.Text != "" )				messageBarView.EnableSend ( );			else				messageBarView.DisableSend ( );			previousContentHeight = contentHeight;		}		// Resizes the chat bar to the specified height		void SetChatBarHeight ( float height )		{			var chatFrame = tableView.Frame;			chatFrame.Height = rootView.Frame.Height - height;			UIView.Animate ( .3, ( ) =>			{				tableView.Frame = chatFrame;				messageBarView.Frame = new RectangleF ( messageBarView.Frame.X, chatFrame.Height, chatFrame.Width, height );			} );		}		// Sets the default height		void ResetChatBarHeight ( )		{			SetChatBarHeight ( MessageBarView.EntryHeight );		}		// Sets the maximum height		void ExpandChatBarHeight ( )		{			SetChatBarHeight ( 94 );		}		// Adjusts the UITextView after an update		void AdjustEntry ( )		{			// This fixes a rendering glitch			messageBarView.TextEntry.ContentOffset = new PointF ( 0, 6 );		}		public void ClearMessageText ( )		{			messageBarView.TextEntry.Text = "";			ResizeEntry ( );		}	}}